{
  "_from": "@rematch/core",
  "_id": "@rematch/core@1.0.6",
  "_inBundle": false,
  "_integrity": "sha512-xz7tA3lJvMHbRXkKcjc4/fbTX3X7GjcfPojXq40Qdw5caF3B5tmu9lslpK9lcOhPk/nDeDqdF2WIrVQrFZAbRA==",
  "_location": "/@rematch/core",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@rematch%2fcore",
    "fetchSpec": "latest",
    "name": "@rematch/core",
    "raw": "@rematch/core",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@rematch",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@rematch/core/-/core-1.0.6.tgz",
  "_shasum": "84677e62111f7d720c3ec552c1f9916353f4cbc3",
  "_shrinkwrap": null,
  "_spec": "@rematch/core",
  "_where": "/home/judasfate/Desktop/StoreCosmetic/webpack_basic",
  "authors": [
    "Blair Bodnar <blairbodnar@gmail.com> (https://github.com/blairbodnar)",
    "Shawn McKay <shawn.j.mckay@gmail.com> (https://github.com/shmck)"
  ],
  "browser": "dist/umd/rematch.js",
  "bugs": {
    "url": "https://github.com/rematch/rematch/issues"
  },
  "bundleDependencies": false,
  "bundlesize": [
    {
      "path": "./dist/umd/rematch.prod.min.js",
      "maxSize": "6 kB"
    }
  ],
  "dependencies": {
    "redux": "4.0.0"
  },
  "deprecated": false,
  "description": "A Redux Framework",
  "devDependencies": {
    "@types/jest": "^23.3.3",
    "@types/node": "^10.11.4",
    "bundlesize": "^0.17.0",
    "coveralls": "^3.0.1",
    "cross-env": "^5.2.0",
    "gitbook-plugin-edit-link": "^2.0.2",
    "gitbook-plugin-github": "^3.0.0",
    "gitbook-plugin-prism": "^2.4.0",
    "jest": "^23.6.0",
    "redux-persist": "^5.9.1",
    "reselect": "^3.0.1",
    "rimraf": "^2.6.2",
    "rollup": "^0.66.4",
    "rollup-plugin-commonjs": "^9.1.8",
    "rollup-plugin-node-resolve": "^3.4.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-typescript2": "^0.17.1",
    "rollup-plugin-uglify": "^6.0.0",
    "ts-jest": "^23.10.4",
    "tslint": "^5.11.0",
    "typescript": "^3.1.1",
    "uglify-es": "^3.3.9"
  },
  "files": [
    "dist",
    "scripts",
    "src/typings.d.ts"
  ],
  "homepage": "https://github.com/rematch/rematch#readme",
  "jest": {
    "collectCoverage": true,
    "coverageDirectory": "coverage/",
    "coveragePathIgnorePatterns": [
      ".mock.js",
      "/_book/",
      "/dist",
      "/node_modules/",
      "/plugins/react-navigation/",
      "/test/utils.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 50,
        "functions": 50,
        "lines": 50,
        "statements": 50
      }
    },
    "globals": {
      "NODE_ENV": "test"
    },
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx",
      "ts",
      "tsx"
    ],
    "testPathIgnorePatterns": [
      "/_book/",
      "/examples/ts",
      "/lib/",
      "/plugins",
      "/plugins/loading-immutable",
      "/plugins/react-navigation/examples",
      "/plugins/subscriptions"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    }
  },
  "keywords": [
    "@rematch",
    "javascript",
    "redux",
    "rematch",
    "state management"
  ],
  "license": "ISC",
  "main": "dist/cjs",
  "module": "dist/esm/rematch.js",
  "name": "@rematch/core",
  "optionalDependencies": {},
  "readme": "<img src=\"./logo/rematch-logo.svg\" height='250' width='250' alt=\"Rematch Logo\">\n\n<p>\n<a href='https://travis-ci.org/rematch/rematch' style='margin: 0 0.5rem;'>\n<img src='https://travis-ci.org/rematch/rematch.svg?branch=master' alt='Build Status' height='18'/>\n</a>\n\n<a href='https://coveralls.io/github/rematch/rematch?branch=master' style='margin: 0 0.5rem;'>\n<img src='https://coveralls.io/repos/github/rematch/rematch/badge.svg?branch=master' alt='Coverage Status' height='18'/>\n</a>\n\n<a href='https://www.codacy.com/app/ShMcK/rematch?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=rematch/rematch&amp;utm_campaign=Badge_Grade' style='margin: 0 0.5rem;'>\n  <img src='https://api.codacy.com/project/badge/Grade/04039822aa23402bb985d9b374ac4a39' alt='Codacy Badge' height='18'>\n</a>\n\n<a href='https://badge.fury.io/js/%40rematch%2Fcore' style='margin: 0 0.5rem;'>\n<img src='https://badge.fury.io/js/%40rematch%2Fcore.svg' alt='npm version' height='18'>\n</a>\n\n<a href='https://img.shields.io/badge/bundlesize-~5kb-brightgreen.svg?style=flat' style='margin: 0 0.5rem;'>\n<img src='https://img.shields.io/badge/bundlesize-~5kb-brightgreen.svg?style=flat' alt='bundle size' height='18'>\n</a>\n\n<a href='https://img.shields.io/badge/dependencies-redux-brightgreen.svg?style=flat' style='margin: 0 0.5rem;'>\n<img src='https://img.shields.io/badge/dependencies-redux-brightgreen.svg?style=flat' alt='file size' height='18'>\n</a>\n</p>\n\n# Rematch\n\n## Rethink Redux.\n\nRematch is Redux best practices without the boilerplate. No more action types, action creators, switch statements or thunks.\n\n- [Why we created Rematch](https://hackernoon.com/redesigning-redux-b2baee8b8a38)\n- [Video: Introducing Rematch](https://www.youtube.com/watch?v=3ezSBYoL5do)\n- [A comparison of Redux & Rematch](./docs/purpose.md)\n\n## Index\n\n* [Getting Started](#getting-started)\n* [Purpose](./docs/purpose.md)\n* [Examples](#examples)\n* [Migration Guide](#migrating-from-redux)\n* API Reference\n  * [Core API](./docs/api.md)\n  * [Init Redux API](./docs/reduxApi.md)\n  * [Plugins API](./docs/pluginsApi.md)\n* Recipes\n  * [Devtools](./docs/recipes/devtools.md)\n  * [React](./docs/recipes/react.md)\n  * [Vue](./docs/recipes/vue.md)\n  * [Testing](./docs/recipes/testing.md)\n  * [TypeScript](./docs/recipes/typescript.md)\n  * [Immer](./docs/recipes/immer.md)\n  * [Decoupling reducers](./docs/recipes/decouplingReducers.md)\n* Plugins\n  * [Selectors](./plugins/select/README.md)\n  * [Loading](./plugins/loading/README.md)\n  * [Persist](./plugins/persist/README.md)\n  * [Updated](./plugins/updated/README.md)\n  * [React Navigation](./plugins/react-navigation/README.md)\n  * [Immer](./plugins/immer/README.md)\n* [Inspiration](./docs/inspiration.md)\n\n##### Translations\n* [中文手册](https://rematch.gitbook.io/handbook)\n\n## Getting Started\n\n```sh\nnpm install @rematch/core\n```\n\n### Step 1: Init\n\n**init** configures your reducers, devtools & store.\n\n#### index.js\n\n```js\nimport { init } from '@rematch/core'\nimport * as models from './models'\n\nconst store = init({\n  models,\n})\n\nexport default store\n```\n\n*For a more advanced setup, see [plugins](./docs/plugins.md) and [Redux config options](./docs/reduxApi.md).*\n\n### Step 2: Models\n\nThe **model** brings together state, reducers, async actions & action creators in one place.\n\n#### models.js\n```js\nexport const count = {\n  state: 0, // initial state\n  reducers: {\n    // handle state changes with pure functions\n    increment(state, payload) {\n      return state + payload\n    }\n  },\n  effects: (dispatch) => ({\n    // handle state changes with impure functions.\n    // use async/await for async actions\n    async incrementAsync(payload, rootState) {\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      dispatch.count.increment(payload)\n    }\n  })\n}\n```\n\n*See the [reducers docs](https://github.com/rematch/rematch/blob/master/docs/api.md#reducers) to learn more, including how to trigger actions from other models.*\n\nUnderstanding models is as simple as answering a few questions:\n\n1. What is my initial state? **state**\n2. How do I change the state? **reducers**\n3. How do I handle async actions? **effects** with async/await\n\n### Step 3: Dispatch\n\n**dispatch** is how we trigger reducers & effects in your models. Dispatch standardizes your actions without the need for writing action types or action creators.\n\n```js\nimport { init } from '@rematch/core'\nimport * as models from './models'\n\nconst store = init({\n  models,\n})\n\nexport const { dispatch } = store\n                                                  // state = { count: 0 }\n// reducers\ndispatch({ type: 'count/increment', payload: 1 }) // state = { count: 1 }\ndispatch.count.increment(1)                       // state = { count: 2 }\n\n// effects\ndispatch({ type: 'count/incrementAsync', payload: 1 }) // state = { count: 3 } after delay\ndispatch.count.incrementAsync(1)                       // state = { count: 4 } after delay\n```\n\nDispatch can be called directly, or with the `dispatch[model][action](payload)` shorthand.\n\n\n### Step 4: View\n\nRematch can be used with native redux integrations such as \"react-redux\". See an example below.\n\n```jsx\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider, connect } from 'react-redux'\nimport store from './store'\n\nconst Count = props => (\n  <div>\n    The count is {props.count}\n    <button onClick={props.increment}>increment</button>\n    <button onClick={props.incrementAsync}>incrementAsync</button>\n  </div>\n)\n\nconst mapState = state => ({\n  count: state.count\n})\n\nconst mapDispatch = ({ count: { increment, incrementAsync }}) => ({\n  increment: () => increment(1),\n  incrementAsync: () => incrementAsync(1)\n})\n\nconst CountContainer = connect(mapState, mapDispatch)(Count)\n\nReactDOM.render(\n  <Provider store={store}>\n    <CountContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n```\n\n## Examples\n\n- Count: [JS](https://codepen.io/Sh_McK/pen/BJMmXx?editors=1010) | [React](https://codesandbox.io/s/3kpyz2nnz6) | [Vue](https://codesandbox.io/s/n3373olqo0) | [Angular](https://stackblitz.com/edit/rematch-angular-5-count)\n- Todos: [React](https://codesandbox.io/s/92mk9n6vww)\n\n## Migrating From Redux\n\nMoving from Redux to Rematch involves very few steps.\n\n1. Setup Rematch `init` with Redux [step 1](https://codesandbox.io/s/yw2wy1q929)\n2. Mix reducers & models [step 2](https://codesandbox.io/s/9yk6rjok1r)\n3. Shift to models [step 3](https://codesandbox.io/s/mym2x8m7v9)\n\n## Migration from 0.x to 1.x\n\nFor an earlier version, see [v0.x docs](https://github.com/rematch/rematch/tree/v0). Currently only displaying v1.x documentation.\n\nBreaking changes with v1.0.0. Global imports of `dispatch` and `getState` have been removed. Instead, you can export and import your store, capturing `store.dispatch`, `store.getState`. See the [Changelog](./CHANGELOG.md) for details.\n\n\n## API\n\nSee the [@rematch/core API](./docs/api.md)\n\n## Changelog\n\nSee the [CHANGELOG](./CHANGELOG.md) to see what's new.\n\n---\n\nLike this project? ★ us on GitHub :)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rematch/rematch.git"
  },
  "scripts": {
    "build": "NODE_ENV=production && npm run clean && rollup -c",
    "build:all": "bash ./scripts/build.sh",
    "clean": "npm run clean:dist & npm run clean:build",
    "clean:build": "rimraf build",
    "clean:dist": "rimraf dist",
    "dev": "tsc --watch src",
    "install:all": "tsc && bash ./scripts/setup_plugins.sh",
    "lint": "tslint -c tslint.json 'src/**/*.ts'",
    "size": "bundlesize",
    "test": "jest"
  },
  "types": "src/typings.d.ts",
  "version": "1.0.6"
}
