{
  "_from": "react-chartkick",
  "_id": "react-chartkick@0.3.0",
  "_inBundle": false,
  "_integrity": "sha512-ZA0X8XUCPhEN/xbsLR+Xrs3hGpHCBscZZR7uwVCNDQWiEceKkTNY9W2ET8sx1beY2x0ixvNtBoc31InGfFIdQg==",
  "_location": "/react-chartkick",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-chartkick",
    "fetchSpec": "latest",
    "name": "react-chartkick",
    "raw": "react-chartkick",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-chartkick/-/react-chartkick-0.3.0.tgz",
  "_shasum": "692461eb808e18e7a2860129247476d55295e677",
  "_shrinkwrap": null,
  "_spec": "react-chartkick",
  "_where": "/home/judasfate/Desktop/StoreCosmetic/webpack_basic",
  "authors": [
    "ankane"
  ],
  "bugs": {
    "url": "https://github.com/ankane/react-chartkick/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "chartkick": "^3.0.0"
  },
  "deprecated": false,
  "description": "Create beautiful JavaScript charts with one line of React",
  "devDependencies": {
    "eslint": "^4.18.1",
    "rollup": "^0.57.1",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-commonjs": "^9.1.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-uglify": "^3.0.0"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/ankane/react-chartkick#readme",
  "license": "MIT",
  "main": "dist/react-chartkick.js",
  "module": "dist/react-chartkick.esm.js",
  "name": "react-chartkick",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "*",
    "react-dom": "*"
  },
  "readme": "# React Chartkick\n\nCreate beautiful JavaScript charts with one line of React\n\n[See it in action](https://www.chartkick.com/react)\n\nSupports [Chart.js](https://www.chartjs.org/), [Google Charts](https://developers.google.com/chart/), and [Highcharts](https://www.highcharts.com/)\n\n## Charts\n\nLine chart\n\n```jsx\n<LineChart data={{\"2017-01-01\": 11, \"2017-01-02\": 6}} />\n```\n\nPie chart\n\n```jsx\n<PieChart data={[[\"Blueberry\", 44], [\"Strawberry\", 23]]} />\n```\n\nColumn chart\n\n```jsx\n<ColumnChart data={[[\"Sun\", 32], [\"Mon\", 46], [\"Tue\", 28]]} />\n```\n\nBar chart\n\n```jsx\n<BarChart data={[[\"Work\", 32], [\"Play\", 1492]]} />\n```\n\nArea chart\n\n```jsx\n<AreaChart data={{\"2017-01-01\": 11, \"2017-01-02\": 6}} />\n```\n\nScatter chart\n\n```jsx\n<ScatterChart data={[[174.0, 80.0], [176.5, 82.3]]} xtitle=\"Size\" ytitle=\"Population\" />\n```\n\nGeo chart - *Google Charts*\n\n```jsx\n<GeoChart data={[[\"United States\", 44], [\"Germany\", 23], [\"Brazil\", 22]]} />\n```\n\nTimeline - *Google Charts*\n\n```jsx\n<Timeline data={[[\"Washington\", \"1789-04-29\", \"1797-03-03\"], [\"Adams\", \"1797-03-03\", \"1801-03-03\"]]} />\n```\n\nMultiple series\n\n```jsx\ndata = [\n  {\"name\":\"Workout\", \"data\": {\"2017-01-01\": 3, \"2017-01-02\": 4}},\n  {\"name\":\"Call parents\", \"data\": {\"2017-01-01\": 5, \"2017-01-02\": 3}}\n];\n\n// and\n<LineChart data={data} />\n```\n\n### Say Goodbye To Timeouts\n\nMake your pages load super fast and stop worrying about timeouts. Give each chart its own endpoint.\n\n```jsx\n<LineChart data=\"/stocks\" />\n```\n\n### Options\n\nId, width, and height\n\n```jsx\n<LineChart id=\"users-chart\" width=\"800px\" height=\"500px\" />\n```\n\nMin and max values\n\n```jsx\n<LineChart min={1000} max={5000} />\n```\n\n`min` defaults to 0 for charts with non-negative values. Use `null` to let the charting library decide.\n\nColors\n\n```jsx\n<LineChart colors={[\"#b00\", \"#666\"]} />\n```\n\nStacked columns or bars\n\n```jsx\n<ColumnChart stacked={true} />\n```\n\nDiscrete axis\n\n```jsx\n<LineChart discrete={true} />\n```\n\nLabel (for single series)\n\n```jsx\n<LineChart label=\"Value\" />\n```\n\nAxis titles\n\n```jsx\n<LineChart xtitle=\"Time\" ytitle=\"Population\" />\n```\n\nStraight lines between points instead of a curve\n\n```jsx\n<LineChart curve={false} />\n```\n\nShow or hide legend\n\n```jsx\n<LineChart legend={true} />\n```\n\nSpecify legend position\n\n```jsx\n<LineChart legend=\"bottom\" />\n```\n\nDonut chart\n\n```jsx\n<PieChart donut={true} />\n```\n\nPrefix, useful for currency - *Chart.js, Highcharts*\n\n```jsx\n<LineChart prefix=\"$\" />\n```\n\nSuffix, useful for percentages - *Chart.js, Highcharts*\n\n```jsx\n<LineChart suffix=\"%\" />\n```\n\nSet a thousands separator - *Chart.js, Highcharts*\n\n```jsx\n<LineChart thousands=\",\" />\n```\n\nSet a decimal separator - *Chart.js, Highcharts*\n\n```jsx\n<LineChart decimal=\",\" />\n```\n\nShow a message when data is empty\n\n```jsx\n<LineChart messages={{empty: \"No data\"}} />\n```\n\nRefresh data from a remote source every `n` seconds\n\n```jsx\n<LineChart refresh={60} />\n```\n\nYou can pass options directly to the charting library with:\n\n```jsx\n<LineChart library={{backgroundColor: \"#eee\"}} />\n```\n\nSee the documentation for [Google Charts](https://developers.google.com/chart/interactive/docs/gallery), [Highcharts](https://api.highcharts.com/highcharts), and [Chart.js](https://www.chartjs.org/docs/) for more info.\n\nTo customize datasets in Chart.js, use:\n\n```jsx\n<LineChart dataset={{borderWidth: 10}} />\n```\n\nYou can pass this option to individual series as well.\n\n### Data\n\nPass data as an array or object\n\n```jsx\n<PieChart data={{\"Blueberry\": 44, \"Strawberry\": 23}} />\n<PieChart data={[[\"Blueberry\", 44], [\"Strawberry\", 23]]} />\n```\n\nTimes can be a `Date`, a timestamp, or a string (strings are parsed)\n\n```jsx\n<LineChart data={[[new Date(), 5], [1368174456, 4], [\"2017-01-01 00:00:00 UTC\", 7]]} />\n```\n\n### Download Charts\n\n*Chart.js only*\n\nGive users the ability to download charts. It all happens in the browser - no server-side code needed.\n\n```jsx\n<LineChart download={true} />\n```\n\nSet the filename\n\n```jsx\n<LineChart download=\"boom\" />\n```\n\n**Note:** Safari will open the image in a new window instead of downloading.\n\n## Installation\n\n### Chart.js\n\nRun\n\n```sh\nyarn add react-chartkick chart.js\n```\n\nAnd add\n\n```es6\nimport ReactChartkick, { LineChart, PieChart } from 'react-chartkick'\nimport Chart from 'chart.js'\n\nReactChartkick.addAdapter(Chart)\n```\n\n### Google Charts\n\nRun\n\n```sh\nyarn add react-chartkick\n```\n\nAnd add\n\n```es6\nimport { LineChart, PieChart } from 'react-chartkick'\n```\n\nAnd include on the page\n\n```html\n<script src=\"https://www.gstatic.com/charts/loader.js\"></script>\n```\n\n### Highcharts\n\nRun\n\n```sh\nyarn add react-chartkick highcharts\n```\n\nAnd add\n\n```es6\nimport ReactChartkick, { LineChart, PieChart } from 'react-chartkick'\nimport Highcharts from 'highcharts'\n\nReactChartkick.addAdapter(Highcharts)\n```\n\n### No Package Manager\n\nInclude the charting library and the Chartkick library\n\n```html\n<script src=\"https://unpkg.com/chart.js@2.7.2/dist/Chart.bundle.js\"></script>\n<script src=\"https://unpkg.com/react-chartkick@0.3.0\"></script>\n```\n\nCharts are prefixed with `ReactChartkick`, like `ReactChartkick.LineChart`.\n\n## Contributing\n\nEveryone is encouraged to help improve this project. Here are a few ways you can help:\n\n- [Report bugs](https://github.com/ankane/react-chartkick/issues)\n- Fix bugs and [submit pull requests](https://github.com/ankane/react-chartkick/pulls)\n- Write, clarify, or fix documentation\n- Suggest or add new features\n\nTo get started with development, run:\n\n```sh\ngit clone https://github.com/ankane/react-chartkick.git\ncd react-chartkick\nyarn\nyarn build\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ankane/react-chartkick.git"
  },
  "scripts": {
    "build": "rollup -c",
    "lint": "eslint src"
  },
  "version": "0.3.0"
}
